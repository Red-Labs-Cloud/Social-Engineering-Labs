
---
- hosts: all  # Replace with your target hosts (DO droplets)
  become: true
  gather_facts: true
  collections:
    - digitalocean.digitalocean

  pre_tasks:
    - name: Ensure Doctl is installed
      apt:
        name: python3-digitalocean
        state: present

  tasks:
    - name: Create directories for tools
      file:
        path: "{{ item.path }}"
        state: directory
        mode: 0750
      loop:
        - path: /opt/evilginx
        - path: /opt/gophish
        - path: /opt/b33f

    - name: Install dependencies (Debian/Ubuntu)
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - python3-pip
        - python3-venv

    - name: Install dependencies (RHEL/CentOS)
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - python3
        - python3-pip
        - python3-virtualenv  # Adjust if using virtualenv

    - name: Clone Evilginx repository
      git:
        repo: https://github.com/evilginx/Evilginx
        dest: /opt/evilginx
        update_cache: yes

    - name: Create Python virtual environment for Evilginx (optional)
      # Consider using a tool like virtualenv or venv for isolation
      python3:
        name: venv
        state: present
        virtualenv: /opt/evilginx/venv

    - name: Install Evilginx dependencies
      pip:
        requirements: /opt/evilginx/requirements.txt
        virtualenv: /opt/evilginx/venv  # If using virtualenv

    - name: Clone Gophish repository
      git:
        repo: https://github.com/gophish/gophish
        dest: /opt/gophish
        update_cache: yes

    - name: Create Python virtual environment for Gophish (optional)
      # Consider using a tool like virtualenv or venv for isolation
      python3:
        name: venv
        state: present
        virtualenv: /opt/gophish/venv

    - name: Install Gophish dependencies
      pip:
        requirements: /opt/gophish/vendor/requirements.txt
        virtualenv: /opt/gophish/venv  # If using virtualenv

    - name: Clone B33f repository
      git:
        repo: https://github.com/openwall/B33F
        dest: /opt/b33f
        update_cache: yes

    - name: Compile B33f
      make:
        chdir: /opt/b33f

    - name: Copy B33f binary to desired location (adjust path)
      copy:
        src: /opt/b33f/src/B33F
        dest: /usr/bin/b33f
        mode: 0755

  # DigitalOcean API tasks (replace with your credentials)
  tasks:
    - name: Configure Doctl with access token
      set_fact:
        do_api_token: "{{ lookup('env', 'DO_API_TOKEN') }}"
    - name: Ensure DigitalOcean Python library is installed
      pip:
        name: digitalocean
        state: present
    - name: Create a new firewall rule (adjust as needed)
      digitalocean_firewall:
        state: present
        name: "Allow HTTP and SSH"
        type: ingress
        inbound_rules:
          - protocol: tcp
            ports: "80,22"
            sources:
              - description: "Anywhere"
                addresses: ["0.0.0.0/0"]
        token: "{{ do_api_token }}"

# Important notes:
# - Replace `all` with the actual hostnames or groups of your DO
